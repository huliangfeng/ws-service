<?xml version="1.0" encoding="UTF-8"?>
<!-- START SNIPPET: beans -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cxf="http://cxf.apache.org/core"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    http://cxf.apache.org/core
    http://cxf.apache.org/schemas/core.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- 定义服务端的拦截器对象 -->
	<bean id="logIn"
		class="org.apache.cxf.interceptor.LoggingInInterceptor" />
	<bean id="logOut"
		class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
	<bean id="saajIn"
		class="org.apache.cxf.binding.soap.saaj.SAAJInInterceptor" />
		
	<!-- WS-Security拦截器 -->
	<bean id="wss4jIn"
		class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
		<!-- 拦截器的构造函数参数 -->
		<constructor-arg>
			<map>
				<entry key="action" value="UsernameToken" />
				<!-- 密码类型，PasswordText表示明文 ，PasswordDigest加密密码 -->
				<entry key="passwordType" value="PasswordDigest" />
				<entry key="passwordCallbackRef">
					<!-- 回调函数引用 -->
					<ref bean="serverPasswordCallback" />
				</entry>
			</map>
		</constructor-arg>
	</bean>

	<!-- 发布服务 和使用endpoint发布服务类似 WebService地址=tomcat地址+cxf+/weather -->
	<jaxws:server address="/testWeb"
		serviceClass="com.nw.service.webservice.TestWebService">
		<jaxws:inInterceptors>
			<ref bean="logIn"/>
			<ref bean="saajIn"/>
			<ref bean="wss4jIn" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="logOut"/>		
		</jaxws:outInterceptors>
		<jaxws:serviceBean>
			<!-- 项目中使用@Component 注解来完成IOC容器的装配 -->
			<ref bean="testWebService" />
		</jaxws:serviceBean>
	</jaxws:server>

	<jaxws:server address="/petWeb"
		serviceClass="com.nw.service.webservice.PetWebService">
		<jaxws:inInterceptors>
			<ref bean="logIn"/>
			<ref bean="saajIn"/>
			<ref bean="wss4jIn" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="logOut"/>		
		</jaxws:outInterceptors>
		<jaxws:serviceBean>
			<!-- 项目中使用@Component 注解来完成IOC容器的装配 -->
			<ref bean="petWebService" />
		</jaxws:serviceBean>
	</jaxws:server>
</beans>
